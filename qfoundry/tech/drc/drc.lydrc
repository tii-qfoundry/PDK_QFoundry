<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>QFoundry DRC</description>
 <version/>
 <category>drc</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <priority>0</priority>
 <shortcut>R</shortcut>
 <show-in-menu>true</show-in-menu>
 <group-name>drc_scripts</group-name>
 <menu-path>tools_menu.drc.end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>drc-dsl-xml</dsl-interpreter-name>
 <text>
# DRC checks for the qfoundry PDK
# Read about DRC scripts in the User Manual under "Design Rule Check (DRC)"
# http://klayout.de/doc/manual/drc_basic.html
# https://klayout.de/doc/about/drc_ref_drc.html

report("qfoundry-PDK DRC")
excpt = input(111)

poly_al_sc = input("1","130/1").flatten.merged- excpt # &amp; input(130).flatten
poly_al_jj = input("2/0").flatten - excpt

devRec=input(68,0)
floorPlan=input(99)
writeField = input(98).flatten


poly_sc_pos = floorPlan.merged - (poly_al_sc )


# Check device overlaps (functional check)
overlaps = devRec.merged(2)
output(overlaps, "Devices","Devices cannot be overlapping.")

# Make sure the devices are within the floor plan layer region;
poly_al_sc.outside(floorPlan).output("Boundary","Devices are out of boundary")
poly_al_jj.outside(floorPlan).output("Boundary","Junctions are out of boundary")

poly_al_jj.outside(writeField).output("Writefield Boundary","Junctios are out of a writefield.")


tol = 1e-1

# Dimensions of aluminum superconductive layer
poly_sc_pos.width(6.micron-tol,angle_limit(0.01)).output("wg width","Waveguide width minimum feature size violation; min 6 um")
spacing_errors = poly_sc_pos.clean.space(2.micron-tol,angle_limit(60))
output(spacing_errors, "wg space","Waveguide width minimum feature size violation; min 3000 nm")

poly_al_jj.width(0.2.micron-tol).output("jj width","Waveguide width minimum feature size violation; min 250 nm")
poly_al_jj.space(0.2.micron-tol,angle_limit(60)).output("jj space","Waveguide width minimum feature size violation; min 250 nm")


#result = writeField.drc(excluding(poly_al_jj)&gt;0.2.um).output("jj positioning","EBL polygons for junctions must be contained within a single writefield.")


# = al_sc.space(0.4.um, props_eq + props_copy).output("Positioning","Connected.")


</text>
</klayout-macro>
